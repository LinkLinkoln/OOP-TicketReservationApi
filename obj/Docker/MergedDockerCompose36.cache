name: dockercompose491084934621982861
services:
  db-ticket:
    environment:
      MYSQL_DATABASE: mydatabase
      MYSQL_ROOT_PASSWORD: mysecretpassword
    image: mysql:8.0
    networks:
      rentalpoint-network: null
    ports:
      - mode: ingress
        target: 3306
        published: "3306"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: db_data
        target: /var/lib/mysql
        volume: {}
  rentalpoint.api:
    build:
      context: C:\Users\Link\Desktop\Cinema\TicketBookingApp
      dockerfile: RentalPoint.Api/Dockerfile
    depends_on:
      db-ticket:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Server=db-ticket;Database=mydatabase;User=root;Password=mysecretpassword;SslMode=Preferred;
    image: rentalpointapi
    networks:
      rentalpoint-network: null
    ports:
      - mode: ingress
        target: 80
        published: "80"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Link\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Link\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  rentalpoint-network:
    name: dockercompose491084934621982861_rentalpoint-network
volumes:
  db_data:
    name: dockercompose491084934621982861_db_data