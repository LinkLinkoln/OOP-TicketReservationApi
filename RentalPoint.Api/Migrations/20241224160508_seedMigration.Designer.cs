// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketBookingApplication.Api;

#nullable disable

namespace TicketBookingApplication.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241224160508_seedMigration")]
    partial class seedMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12b7e4a5-93f6-4b82-b721-4c5a8d9f1c32"),
                            Email = "john.doe1@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "+1234567890"
                        },
                        new
                        {
                            Id = new Guid("29f7c5a8-41d3-44f2-b9f4-2c8d7a1b5f12"),
                            Email = "jane.smith2@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "+1234567891"
                        },
                        new
                        {
                            Id = new Guid("8f2c9b7a-14d6-4a5b-b93e-7f2a4d8b5c7f"),
                            Email = "alice.brown3@example.com",
                            FirstName = "Alice",
                            LastName = "Brown",
                            PhoneNumber = "+1234567892"
                        },
                        new
                        {
                            Id = new Guid("3b9f4a5d-7f2c-4d1b-b921-8c5f7a2b4d1c"),
                            Email = "bob.taylor4@example.com",
                            FirstName = "Bob",
                            LastName = "Taylor",
                            PhoneNumber = "+1234567893"
                        },
                        new
                        {
                            Id = new Guid("7f2c8d9a-41b5-4d7f-b12e-4a9f5c7a8d32"),
                            Email = "charlie.davis5@example.com",
                            FirstName = "Charlie",
                            LastName = "Davis",
                            PhoneNumber = "+1234567894"
                        },
                        new
                        {
                            Id = new Guid("1e7b4c5a-9f21-4a8f-b2d3-5c7a8f4d9b1f"),
                            Email = "emily.clark6@example.com",
                            FirstName = "Emily",
                            LastName = "Clark",
                            PhoneNumber = "+1234567895"
                        },
                        new
                        {
                            Id = new Guid("5c7a9f4b-2d7e-4b1f-b93a-7a8f5c4d9b3e"),
                            Email = "frank.white7@example.com",
                            FirstName = "Frank",
                            LastName = "White",
                            PhoneNumber = "+1234567896"
                        });
                });

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3f1f8b0-19e6-4db6-8e91-a6fdee8a7611"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("a2c6f1b3-7520-4a90-baba-5cb0c00f8935"),
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("b341cf42-64c5-4dfb-b0b6-4bb5d4b1f451"),
                            Name = "Drama"
                        },
                        new
                        {
                            Id = new Guid("29f7804a-54f8-4a72-aadb-cf4f3f6060a4"),
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("ef9a4a02-b59e-497e-82be-20d19f62e785"),
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("fde9f3a4-3558-4ddf-9349-b6e75fd8e92e"),
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("e0e4d9e2-d2b1-4c50-b4a7-ef3a8b21cde3"),
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("de91c5e3-dab1-4d23-9f36-947f785b20b3"),
                            Description = "An exciting action movie.",
                            GenreId = new Guid("d3f1f8b0-19e6-4db6-8e91-a6fdee8a7611"),
                            Name = "Action Movie 1"
                        },
                        new
                        {
                            Id = new Guid("ae61e5f1-4517-48e3-960e-812f7235c8fc"),
                            Description = "A hilarious comedy movie.",
                            GenreId = new Guid("a2c6f1b3-7520-4a90-baba-5cb0c00f8935"),
                            Name = "Comedy Movie 1"
                        },
                        new
                        {
                            Id = new Guid("bf35e5a2-3abf-4e2b-b0d4-31d84324e674"),
                            Description = "An emotional drama movie.",
                            GenreId = new Guid("b341cf42-64c5-4dfb-b0b6-4bb5d4b1f451"),
                            Name = "Drama Movie 1"
                        },
                        new
                        {
                            Id = new Guid("af47c5a9-0921-463e-b1a8-4c59b24b8f0e"),
                            Description = "A scary horror movie.",
                            GenreId = new Guid("29f7804a-54f8-4a72-aadb-cf4f3f6060a4"),
                            Name = "Horror Movie 1"
                        },
                        new
                        {
                            Id = new Guid("cfe1b5d9-0f2b-4a24-b749-2e8bcb14a241"),
                            Description = "A magical fantasy movie.",
                            GenreId = new Guid("ef9a4a02-b59e-497e-82be-20d19f62e785"),
                            Name = "Fantasy Movie 1"
                        },
                        new
                        {
                            Id = new Guid("d921a4e3-7f2a-467e-b93a-08fcb57b8e4e"),
                            Description = "A futuristic sci-fi movie.",
                            GenreId = new Guid("fde9f3a4-3558-4ddf-9349-b6e75fd8e92e"),
                            Name = "Sci-Fi Movie 1"
                        },
                        new
                        {
                            Id = new Guid("fb12a8d2-1721-4c48-bd8b-4c7a12b1c1f3"),
                            Description = "A heartwarming romance movie.",
                            GenreId = new Guid("e0e4d9e2-d2b1-4c50-b4a7-ef3a8b21cde3"),
                            Name = "Romance Movie 1"
                        });
                });

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22b9d7b1-4c32-459a-bf71-1e9bcd16a7d5"),
                            AvailableQuantity = 50,
                            MovieId = new Guid("de91c5e3-dab1-4d23-9f36-947f785b20b3"),
                            Price = 10.99m,
                            StartAt = new DateTime(2024, 12, 24, 17, 5, 8, 550, DateTimeKind.Utc).AddTicks(4904)
                        },
                        new
                        {
                            Id = new Guid("4a3bc7d5-53f6-4e2b-b4d6-94a81c2f574d"),
                            AvailableQuantity = 30,
                            MovieId = new Guid("ae61e5f1-4517-48e3-960e-812f7235c8fc"),
                            Price = 9.99m,
                            StartAt = new DateTime(2024, 12, 24, 18, 5, 8, 550, DateTimeKind.Utc).AddTicks(4918)
                        },
                        new
                        {
                            Id = new Guid("34a5c9f4-6123-48e6-b2c4-5db7c9a5a54e"),
                            AvailableQuantity = 20,
                            MovieId = new Guid("bf35e5a2-3abf-4e2b-b0d4-31d84324e674"),
                            Price = 12.99m,
                            StartAt = new DateTime(2024, 12, 24, 19, 5, 8, 550, DateTimeKind.Utc).AddTicks(4921)
                        },
                        new
                        {
                            Id = new Guid("89f7b5d3-4128-489b-9487-ef21c4b8e5f3"),
                            AvailableQuantity = 40,
                            MovieId = new Guid("af47c5a9-0921-463e-b1a8-4c59b24b8f0e"),
                            Price = 8.99m,
                            StartAt = new DateTime(2024, 12, 24, 20, 5, 8, 550, DateTimeKind.Utc).AddTicks(4923)
                        },
                        new
                        {
                            Id = new Guid("8f1c9b42-0f1d-44f2-b14b-812c9b8c5d7f"),
                            AvailableQuantity = 25,
                            MovieId = new Guid("cfe1b5d9-0f2b-4a24-b749-2e8bcb14a241"),
                            Price = 11.99m,
                            StartAt = new DateTime(2024, 12, 24, 21, 5, 8, 550, DateTimeKind.Utc).AddTicks(4924)
                        },
                        new
                        {
                            Id = new Guid("5d7e4b32-1f8a-482f-b7f1-1e3c9b8f0a8b"),
                            AvailableQuantity = 15,
                            MovieId = new Guid("d921a4e3-7f2a-467e-b93a-08fcb57b8e4e"),
                            Price = 13.99m,
                            StartAt = new DateTime(2024, 12, 24, 22, 5, 8, 550, DateTimeKind.Utc).AddTicks(4927)
                        },
                        new
                        {
                            Id = new Guid("1e9b7f32-4d2a-42b1-9723-8f4b9c7a8d5c"),
                            AvailableQuantity = 10,
                            MovieId = new Guid("fb12a8d2-1721-4c48-bd8b-4c7a12b1c1f3"),
                            Price = 14.99m,
                            StartAt = new DateTime(2024, 12, 24, 23, 5, 8, 550, DateTimeKind.Utc).AddTicks(4929)
                        });
                });

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SessionId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d5f7a4c-92b7-4a1d-b5f2-7a8d9c4b1e32"),
                            ClientId = new Guid("12b7e4a5-93f6-4b82-b721-4c5a8d9f1c32"),
                            SessionId = new Guid("22b9d7b1-4c32-459a-bf71-1e9bcd16a7d5")
                        },
                        new
                        {
                            Id = new Guid("3a9f4b7e-1c2b-4d5a-b93e-7f4d9c1a8b52"),
                            ClientId = new Guid("29f7c5a8-41d3-44f2-b9f4-2c8d7a1b5f12"),
                            SessionId = new Guid("4a3bc7d5-53f6-4e2b-b4d6-94a81c2f574d")
                        },
                        new
                        {
                            Id = new Guid("7a8f5c4d-2b9f-4b1e-b7d3-8c4a9f1b5e32"),
                            ClientId = new Guid("8f2c9b7a-14d6-4a5b-b93e-7f2a4d8b5c7f"),
                            SessionId = new Guid("34a5c9f4-6123-48e6-b2c4-5db7c9a5a54e")
                        },
                        new
                        {
                            Id = new Guid("1e7a9f4c-3d5b-4f8a-b92e-7f4d1b5c8a32"),
                            ClientId = new Guid("3b9f4a5d-7f2c-4d1b-b921-8c5f7a2b4d1c"),
                            SessionId = new Guid("89f7b5d3-4128-489b-9487-ef21c4b8e5f3")
                        },
                        new
                        {
                            Id = new Guid("5c7f8d4a-92b1-4e7f-b9d2-7a1b5f4d8a32"),
                            ClientId = new Guid("7f2c8d9a-41b5-4d7f-b12e-4a9f5c7a8d32"),
                            SessionId = new Guid("8f1c9b42-0f1d-44f2-b14b-812c9b8c5d7f")
                        },
                        new
                        {
                            Id = new Guid("2d3f7b8e-4c1a-5d9f-b72e-8a4c9f1d3b52"),
                            ClientId = new Guid("1e7b4c5a-9f21-4a8f-b2d3-5c7a8f4d9b1f"),
                            SessionId = new Guid("5d7e4b32-1f8a-482f-b7f1-1e3c9b8f0a8b")
                        },
                        new
                        {
                            Id = new Guid("4b9f2a7c-8d1f-3e5b-b74a-9f3c2d8a7e52"),
                            ClientId = new Guid("5c7a9f4b-2d7e-4b1f-b93a-7a8f5c4d9b3e"),
                            SessionId = new Guid("1e9b7f32-4d2a-42b1-9723-8f4b9c7a8d5c")
                        });
                });

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Movie", b =>
                {
                    b.HasOne("TicketBookingApplication.Api.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Session", b =>
                {
                    b.HasOne("TicketBookingApplication.Api.Models.Movie", "Movie")
                        .WithMany("Sessions")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Ticket", b =>
                {
                    b.HasOne("TicketBookingApplication.Api.Models.Client", "Client")
                        .WithMany("Tickets")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketBookingApplication.Api.Models.Session", "Session")
                        .WithMany("Tickets")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Client", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Movie", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("TicketBookingApplication.Api.Models.Session", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
